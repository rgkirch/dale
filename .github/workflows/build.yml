name: build
on: [push, pull_request]
jobs:
  build-14:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v1
      - run: sudo apt-get install build-essential llvm-14 llvm-14-dev clang-14 libedit-dev
      - run: cmake -DLLVM_CONFIG=/usr/bin/llvm-config-14 . && make && make tests
  build-macos-14:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - run: brew install llvm@14
      - run: PATH="/usr/local/opt/llvm@14/bin:$PATH" cmake . && make -j$(nproc) && make tests
  build-win-14:
    #https://github.com/actions/runner-images/blob/main/images/windows/Windows2019-Readme.md
    runs-on: windows-2019
    steps:
      - uses: actions/cache/restore@v4
        id: vcpkg-cache
        with:
          path: C:\vcpkg
          key: vcpkg-cache
      - if: steps.vcpkg-cache.outputs.cache-hit != 'true'
        run: vcpkg install pkgconf libffi
      - uses: actions/cache/save@v4
        if: always()
        with:
          path: C:\vcpkg
          key: vcpkg-cache
      #https://github.com/llvm/actions/blob/main/setup-windows/vs_setup.bat
      - name: llvm setup windows
        uses: llvm/actions/setup-windows@main
        with:
          arch: amd64
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: llvm-build
          key: llvm-build
      - if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          ref: llvmorg-14.0.6
          path: llvm-project
          clean: false
      - if: steps.cache.outputs.cache-hit != 'true'
        name: populate llvm if not cached
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS='clang' -S .\llvm-project\llvm\ -B llvm-build
          cd llvm-build
          ninja
      - uses: actions/cache/save@v4
        if: always()
        with:
          path: llvm-build
          key: llvm-build
      - uses: actions/checkout@v4
        with:
          path: dale
      - run: cmake -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake -DLLVM_CONFIG="D:\a\dale\dale\llvm-build\bin\llvm-config.exe" -G Ninja -S dale -B dale-build
      - run: |
          cd dale-build
          ninja
